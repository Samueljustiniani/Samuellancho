/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Conexion.Conexiondb;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class Editar extends javax.swing.JFrame {

    Conexiondb con = new Conexiondb();
    Connection cn;
    Statement st;
    ResultSet rs;
    DefaultTableModel modelo;
    int id;

    /**
     * Creates new form Editar
     */
    public Editar() {
        initComponents();
        setLocationRelativeTo(null);
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNombres = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldApellidos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCorreo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTelefono = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxSeleccionObjetos1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jTextAreaComentario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Datos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("id");

        txtId.setEditable(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombres");

        jTextFieldNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombresActionPerformed(evt);
            }
        });

        jLabel3.setText("Apellidos");

        jLabel4.setText("correo electronico");

        jLabel5.setText("telefono");

        jTextFieldTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelefonoActionPerformed(evt);
            }
        });

        jLabel6.setText("seleccion_objetos");

        jComboBoxSeleccionObjetos1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Alimentos", "Ropa", "Recursos tecnologicos", "Utiles escolares", "Otros" }));

        jLabel7.setText("comentario");

        jTextAreaComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextAreaComentarioActionPerformed(evt);
            }
        });

        Tabla_Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombres", "Apellidos", "Correo electronico", "Telefono", "seleccion de objetos", "Comentarios"
            }
        ));
        Tabla_Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla_DatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla_Datos);

        jButton1.setText("REGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("EDITAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextFieldCorreo))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(62, 62, 62)
                                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(163, 163, 163)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldApellidos)
                            .addComponent(jTextFieldNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(28, 28, 28))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBoxSeleccionObjetos1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton2)
                                .addComponent(jTextAreaComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxSeleccionObjetos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextAreaComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(28, 28, 28)
                .addComponent(jButton2)
                .addGap(33, 33, 33))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed

    }//GEN-LAST:event_txtIdActionPerformed

    private void jTextFieldNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombresActionPerformed

    private void jTextFieldTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelefonoActionPerformed

    private void jTextAreaComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextAreaComentarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAreaComentarioActionPerformed

    private void Tabla_DatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla_DatosMouseClicked
     // Obtenemos la fila seleccionada en la tabla
    int fila = Tabla_Datos.getSelectedRow();

    if (fila == -1) {
        JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla");
    } else {
        // Obtener los valores de cada columna en la fila seleccionada
        String idDonacion = Tabla_Datos.getValueAt(fila, 0).toString(); // ID de la donación
        String nombres = (String) Tabla_Datos.getValueAt(fila, 1);       // Nombres
        String apellidos = (String) Tabla_Datos.getValueAt(fila, 2);    // Apellidos
        String correo = (String) Tabla_Datos.getValueAt(fila, 3);       // Correo electrónico
        String telefono = Tabla_Datos.getValueAt(fila, 4).toString();   // Teléfono
        String seleccionObjetos = (String) Tabla_Datos.getValueAt(fila, 5); // Selección de objetos
        String comentario = (String) Tabla_Datos.getValueAt(fila, 6);   // Comentarios

        // Verificar e inicializar jComboBoxSeleccionObjetos si es necesario
        if (jComboBoxSeleccionObjetos == null) {
            System.out.println("Inicializando JComboBox");
            jComboBoxSeleccionObjetos = new JComboBox<>();
            jComboBoxSeleccionObjetos.addItem("Alimentos");
            jComboBoxSeleccionObjetos.addItem("Ropa");
            jComboBoxSeleccionObjetos.addItem("Recursos tecnologicos");
            jComboBoxSeleccionObjetos.addItem("Utiles escolares");
            jComboBoxSeleccionObjetos.addItem("Otros");
        }

        // Pasar los valores obtenidos a los campos del formulario
        txtId.setText(idDonacion);
        jTextFieldNombres.setText(nombres);
        jTextFieldApellidos.setText(apellidos);
        jTextFieldCorreo.setText(correo);
        jTextFieldTelefono.setText(telefono);
        jComboBoxSeleccionObjetos.setSelectedItem(seleccionObjetos);
        jTextAreaComentario.setText(comentario);
    }
    }//GEN-LAST:event_Tabla_DatosMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Modificar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Principal list = new Principal();
        list.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editar().setVisible(true);
            }
        });
    }

    void listar() {
        String sql = "SELECT * FROM donaciones";

        try {
            // Establecemos conexión y ejecutamos la consulta
            cn = con.getConnection();
            System.out.println("Conexión exitosa a la base de datos.");

            st = cn.createStatement();
            rs = st.executeQuery(sql);

            // Comprobamos si la consulta devuelve resultados
            if (rs.next()) {
                System.out.println("Datos encontrados.");
                // Objeto para almacenar las filas (ajustado a 7 columnas)
                Object[] usuario = new Object[7];
                modelo = (DefaultTableModel) Tabla_Datos.getModel();

                // Limpiamos el modelo antes de cargar nuevos datos
                modelo.setRowCount(0);

                // Iteramos sobre los resultados de la consulta
                do {
                    // Reemplaza "id" por "id_donacion"
                    usuario[0] = rs.getInt("id_donacion");                // ID de la donación
                    usuario[1] = rs.getString("nombres");                // Nombres
                    usuario[2] = rs.getString("apellidos");              // Apellidos
                    usuario[3] = rs.getString("correo");                 // Correo electrónico
                    usuario[4] = rs.getString("telefono");               // Teléfono
                    usuario[5] = rs.getString("seleccion_objetos");      // Selección de objetos
                    usuario[6] = rs.getString("comentario");             // Comentario

                    // Agregamos la fila al modelo de la tabla
                    modelo.addRow(usuario);
                } while (rs.next());

                // Establecemos el modelo actualizado en la tabla
                Tabla_Datos.setModel(modelo);
            } else {
                System.out.println("No se encontraron datos.");
            }

        } catch (SQLException e) {
            // Manejamos el error en caso de fallo de la consulta o conexión
            System.out.println("Error al listar datos: " + e.getMessage());
            e.printStackTrace();  // Esto imprime la traza completa del error para mayor detalle
        } finally {
            // Cerramos los recursos (si es que fueron creados)
            try {
                if (rs != null) {
                    rs.close();
                }
                if (st != null) {
                    st.close();
                }
                if (cn != null) {
                    cn.close();
                }
            } catch (SQLException ex) {
                System.out.println("Error al cerrar los recursos: " + ex.getMessage());
            }
        }
    }

    void Modificar() {
        // Obtener los valores de los campos de texto
        String nombres = jTextFieldNombres.getText();  // Suponiendo que 'txtnombre' es para el campo 'nombres'
        String apellidos = jTextFieldApellidos.getText();  // Suponiendo que 'txtApellidos' es para el campo 'apellidos'
        String correo = jTextFieldCorreo.getText();  // Suponiendo que 'txtCorreo' es para el campo 'correo'
        String telefono = jTextFieldTelefono.getText();  // Suponiendo que 'txtTelefono' es para el campo 'telefono'
        String seleccionObjetos = jComboBoxSeleccionObjetos1.getSelectedItem().toString();  // Obtener el valor seleccionado del combo box
        String comentario = jTextAreaComentario.getText();  // Suponiendo que 'txtComentario' es para 'comentario'

        // Validación del nombre: solo debe contener letras y espacios
        if (!nombres.matches("^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$")) {
            JOptionPane.showMessageDialog(null, "El nombre solo debe contener letras, espacios, tildes y la letra Ñ.");
            return;
        }

        // Validación del apellido: solo debe contener letras y espacios
        if (!apellidos.matches("^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$")) {
            JOptionPane.showMessageDialog(null, "El apellido solo debe contener letras, espacios, tildes y la letra Ñ.");
            return;
        }

        // Validación del correo: debe ser un correo electrónico válido
        if (!correo.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
            JOptionPane.showMessageDialog(null, "El correo electrónico no es válido.");
            return;
        }

        // Validación del teléfono: debe ser un número con 9 dígitos
        if (!telefono.matches("\\d{9}")) {
            JOptionPane.showMessageDialog(null, "El teléfono debe tener 9 dígitos.");
            return;
        }

        // Validación de la selección de objetos: debe tener al menos un objeto seleccionado
        if (seleccionObjetos.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar los objetos seleccionados para donar.");
            return;
        }

        // Validación de los comentarios: debe ser un campo no vacío
        if (comentario.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un comentario.");
            return;
        }

        // Verificación de que no haya campos vacíos
        if (nombres.equals("") || apellidos.equals("") || correo.equals("") || telefono.equals("") || seleccionObjetos.equals("") || comentario.equals("")) {
            JOptionPane.showMessageDialog(null, "Necesita ingresar todos los cambios.");
            return;
        }

        // Consulta SQL para actualizar los datos en la tabla 'donaciones'
        String sql = "UPDATE donaciones SET nombres = ?, apellidos = ?, correo = ?, telefono = ?, seleccion_objetos = ?, comentario = ? WHERE id_donacion = ?";

        try {
            // Establecer conexión y preparar la sentencia SQL
            cn = con.getConnection();
            PreparedStatement pst = cn.prepareStatement(sql);

            // Asignar los valores a la sentencia
            pst.setString(1, nombres);
            pst.setString(2, apellidos);
            pst.setString(3, correo);
            pst.setString(4, telefono);
            pst.setString(5, seleccionObjetos);
            pst.setString(6, comentario);

            // Obtener el id de la donación desde el campo txtId
            int idDonacion = Integer.parseInt(txtId.getText());
            pst.setInt(7, idDonacion);

            // Ejecutar la actualización
            int n = pst.executeUpdate();
            if (n > 0) {
                // Mostrar mensaje de éxito y actualizar la lista
                JOptionPane.showMessageDialog(null, "Actualización completada");
                limpiar();       // Limpiar los campos
                listar();        // Volver a listar los registros actualizados
                nuevo();         // Inicializar el formulario para nuevos registros
            }
        } catch (SQLException e) {
            // Mostrar error en caso de que ocurra
            JOptionPane.showMessageDialog(null, "Error en: " + e.getMessage());
        }
    }

    void limpiar() {
        while (Tabla_Datos.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    void nuevo() {
        // Limpiar los campos de texto
        txtId.setText(""); // Limpiar el ID
        jTextFieldNombres.setText(""); // Limpiar el campo de nombres
        jTextFieldApellidos.setText(""); // Limpiar el campo de apellidos
        jTextFieldCorreo.setText(""); // Limpiar el campo de correo
        jTextFieldTelefono.setText(""); // Limpiar el campo de teléfono

        // Reiniciar el JComboBox (asumiendo que selecciona el tipo de objeto a donar)
        jComboBoxSeleccionObjetos.setSelectedIndex(0); // Selecciona el primer elemento del combo box

        // Limpiar el área de texto para comentarios
        jTextAreaComentario.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla_Datos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBoxSeleccionObjetos;
    private javax.swing.JComboBox<String> jComboBoxSeleccionObjetos1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextAreaComentario;
    private javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldCorreo;
    private javax.swing.JTextField jTextFieldNombres;
    private javax.swing.JTextField jTextFieldTelefono;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
